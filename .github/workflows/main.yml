name: Node.js CI/CD

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm run test:unit
        env:
          NODE_ENV: test
          JEST_TIMEOUT: 10000

  ui-tests:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
      - name: Install Playwright
        run: npx playwright install --with-deps chromium
      - name: Create required directories
        run: |
          mkdir -p public lambda data
          echo '[]' > data/users.json
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
      - name: Start server
        run: npm start > server.log 2>&1 &
      - name: Wait for server
        run: |
          echo "Waiting for server to start..."
          npx wait-on -t 30000 -v tcp:9000
          echo "Server is ready"
      - name: Run UI tests
        run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" npm run test:ui
        env:
          DEBUG: pw:api
          CI: true
      - name: Upload server logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server-logs
          path: server.log
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    needs: [build-and-test, ui-tests]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy from GitHub Actions'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
